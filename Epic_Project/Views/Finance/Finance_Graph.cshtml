<div>
    <table>
        <tr>
            @*<td width="50%">
            <div class="column">
                <div class="card m-3">
                    <div class="card-header" style="text-align: center">
                        <text style="font-size: 18px; font-weight: bold;">Reporting Period</text>
                    </div>
                    <div class="card-body row">
                        <table>
                            <tr>
                                <td>
                                    <div>
                                        @(Html.Kendo().Chart<FinanceGraph>()
                                          .Name("finance-period")
                                          .Legend(legend => legend
                                              .Position(ChartLegendPosition.Bottom).Labels(l => l.Font("16px Helvetica Neue, Helvetica, Arial, sans-serif")).Orientation(ChartLegendOrientation.Vertical).Align(ChartLegendAlign.Start)
                                          )
                                          .DataSource(ds => ds.Read(read => read.Action("GetReportingPeriodGraph", "Finance")))
                                          .ChartArea(chartArea => chartArea
                                              .Background("transparent").Width(900).Height(650)
                                          )
                                          .SeriesDefaults(seriesDefaults =>
                                              seriesDefaults.Line().Style(ChartSeriesStyle.Smooth)
                                          )
                                          .Series(series =>
                                          {
                                              series.Line(model => model.Line1).Name("Architecht - Technical & Businessteam Cost").CategoryField("Category").Color("#008744").Width(2);
                                              series.Line(model => model.Line2).Name("ITS - Technical & Business team Cost").CategoryField("Category").Color("#0057e7").Width(2);
                                              series.Line(model => model.Line3).Name("License fee to KTP").CategoryField("Category").Color("#d62d20").Width(2);
                                              series.Line(model => model.Line4).Name("Servers").CategoryField("Category").Color("#ffa700").Width(2);
                                              series.Line(model => model.Line5).Name("Travel Expenses - Architecht").CategoryField("Category").Color("#4b3832").Width(2);
                                              series.Line(model => model.Line6).Name("Travel Expenses - ITS").CategoryField("Category").Color("#a7adba").Width(2);
                                              series.Line(model => model.Line7).Name("Total Investment").CategoryField("Category").Color("#f95770").Width(2);
                                              series.Line(model => model.Line7).Name("Total Investment").CategoryField("Category").Color("#f95770").Width(2);
                                          })
                                          .CategoryAxis(axis => axis
                                          .Labels(labels => labels.Rotation(0).Font("18px Helvetica Neue, Helvetica, Arial, sans-serif"))
                                              .Crosshair(c => c.Visible(true))
                                          )
                                          .ValueAxis(axis => axis
                                              .Numeric().Labels(labels => labels.Format("{0}%").Font("16px Helvetica Neue, Helvetica, Arial, sans-serif")).MajorUnit(10)
                                              .Name("of Total")
                                              .Max(102)
                                              .Line(line => line.Visible(false))
                                              .AxisCrossingValue(-10)
                                          )
                                          .Tooltip(tooltip => tooltip
                                          .Visible(true)
                                          .Shared(true)
                                          .Format("{0:0.00}")
                                          )
                                        )
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </td>*@
            <td width="100%">
                <div class="column">
                    <div class="card m-3">
                        <div class="card-header" style="text-align: center">
                            <text style="font-size: 18px; font-weight: bold;">Program Total</text>
                        </div>
                        <div class="card-body row">
                            <table>
                                <tr>
                                    <td>
                                        <div>
                                            @(Html.Kendo().Chart<FinanceGraph>()
                                                      .Name("finance-total")
                                                      .Legend(legend => legend
                                                          .Position(ChartLegendPosition.Bottom).Labels(l => l.Font("16px Helvetica Neue, Helvetica, Arial, sans-serif")).Orientation(ChartLegendOrientation.Vertical).Align(ChartLegendAlign.Start)
                                                      )
                                                      .DataSource(ds => ds.Read(read => read.Action("GetProgramTotalGraph", "Finance")))
                                                      .ChartArea(chartArea => chartArea
                                                          .Background("transparent").Width(900).Height(650)
                                                      )
                                                      .SeriesDefaults(seriesDefaults =>
                                                          seriesDefaults.Line().Style(ChartSeriesStyle.Smooth)
                                                      )
                                                      .Series(series =>
                                                      {
                                                          series.Line(model => model.Line1).Name("Architecht - Technical & Businessteam Cost").CategoryField("Category").Color("#008744").Width(2);
                                                          series.Line(model => model.Line2).Name("ITS - Technical & Business team Cost").CategoryField("Category").Color("#0057e7").Width(2);
                                                          series.Line(model => model.Line3).Name("License fee to KTP").CategoryField("Category").Color("#d62d20").Width(2);
                                                          series.Line(model => model.Line4).Name("Servers").CategoryField("Category").Color("#ffa700").Width(2);
                                                          series.Line(model => model.Line5).Name("Travel Expenses - Architecht").CategoryField("Category").Color("#4b3832").Width(2);
                                                          series.Line(model => model.Line6).Name("Travel Expenses - ITS").CategoryField("Category").Color("#a7adba").Width(2);
                                                          series.Line(model => model.Line7).Name("Migration Activity Ethix NG").CategoryField("Category").Color("#f95770").Width(2);
                                                          series.Line(model => model.Line8).Name("Total Investment").CategoryField("Category").Color("#f95770").Width(2);
                                                      })
                                                      .CategoryAxis(axis => axis
                                                      .Labels(labels => labels.Rotation(0).Font("18px  Helvetica Neue, Helvetica, Arial, sans-serif"))
                                                          .Crosshair(c => c.Visible(true))
                                                      )
                                                      .ValueAxis(axis => axis
                                                          .Numeric().Labels(labels => labels.Format("{0}%").Font("16px Helvetica Neue, Helvetica, Arial, sans-serif")).MajorUnit(10)
                                                          .Name("of Total")
                                                          .Max(102)
                                                          .Line(line => line.Visible(false))
                                                          .AxisCrossingValue(-15)
                                                      )
                                                      .Tooltip(tooltip => tooltip.Font("16px")
                                                      .Visible(true)
                                                      .Shared(true)
                                                      .Format("{0:0.00}")
                                                      )
                                            )
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
</div>